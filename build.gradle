apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: "signing"

group = 'com.github.rabitarochan'
archivesBaseName = 'kotlimapper'
version = '0.1-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.0.0'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile 'org.slf4j:slf4j-api:1.7.16'

    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testCompile 'com.h2database:h2:1.4.191'
    testCompile 'junit:junit:4.12'
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file('build/classes/main/')
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

try {
    uploadArchives {
        repositories.mavenDeployer {
            beforeDeployment {
                MavenDeployment deployment -> signing.signPom(deployment)
            }
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                name 'kotlimapper'
                packaging 'jar'
                description 'A simple object mapper for Kotlin.'
                url 'http://github.com/rabitarochan/kotlimapper'

                scm {
                    url "scm:git@github.com:rabitarochan/kotlimapper.git"
                    connection "scm:git@github.com:rabitarochan/kotlimapper.git"
                    developerConnection "scm:git@github.com:rabitarochan/kotlimapper.git"
                }
                licenses {
                    license {
                        name 'MIT License'
                        url 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id 'rabitarochan'
                        name 'Kengo Asamizu'
                        email 'rabitarochan@gmail.com'
                    }
                }
            }

        }
    }
} catch (MissingPropertyException e) {
    logger.warn("It is possible to restrain this error only in travis-ci. When an exception occurred to the time of a local build, correspondence is needed.")
    e.printStackTrace()
}

